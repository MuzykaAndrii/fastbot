name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.6-alpine
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }} -d ${{ env.POSTGRES_DB }}"
          --health-interval=5s
          --health-timeout=10s
          --health-retries=5
          --health-start-period=80s

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Docker Compose
        run: sudo apt-get install docker-compose -y

      - name: Create .test.env file from secret
        run: echo "${{ secrets.TEST_ENV_FILE_CONTENT }}" > ./secrets/environment/.test.env

      - name: Build Docker container for tests
        run: docker build -f Dockerfile.test -t my-app:test .

      - name: Run tests
        run: |
          docker run --network="host" \
                     -e POSTGRES_DB=${{ env.POSTGRES_DB }} \
                     -e POSTGRES_USER=${{ env.POSTGRES_USER }} \
                     -e POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} \
                     -e MODE="TEST" \
                     my-app:test
